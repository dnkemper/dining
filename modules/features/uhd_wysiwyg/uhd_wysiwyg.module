<?php
/**
 * @file
 * Code for the UHD WYSIWYG feature.
 */

include_once 'uhd_wysiwyg.features.inc';

/**
 * Implements hook_wysiwyg_plugin().
 */
function uhd_wysiwyg_wysiwyg_plugin($editor, $version) {
  switch ($editor) {
    case 'ckeditor':
      return array(
        'layoutmanager' => array(
          // A list of buttons provided by this native plugin. The key has to
          // match the corresponding JavaScript implementation. The value is
          // is displayed on the editor configuration form only.
          'buttons' => array(
            'AddLayout' => t('Layout Manager'),
          ),
          // Boolean whether the editor needs to load this plugin. When TRUE,
          // the editor will automatically load the plugin based on the 'path'
          // variable provided. If FALSE, the plugin either does not need to
          // be loaded or is already loaded by something else on the page.
          // Most plugins should define TRUE here.
          'load' => TRUE,
          // Boolean whether this plugin is a native plugin, i.e. shipped with
          // the editor. Definition must be ommitted for plugins provided by
          // other modules. TRUE means 'path' and 'filename' above are ignored
          // and the plugin is instead loaded from the editor's plugin folder.
          'internal' => TRUE,
        ),
      );
      break;
  }
}

/**
 * Implements hook_wysiwyg_editor_settings_alter().
 */
function uhd_wysiwyg_wysiwyg_editor_settings_alter(&$settings, $context) {
  // Check if the editor is CKEditor.
  if ($context['profile']->editor == 'ckeditor') {

    $settings['layoutmanager_loadbootstrap'] = TRUE;

    $settings['startupOutlineBlocks'] = FALSE;

  }
}

function uhd_wysiwyg_module_implements_alter(&$implementations, $hook) {
  if ($hook == 'wysiwyg_editor_settings_alter') {
    // Move uhd_wysiwyg_wysiwyg_editor_settings_alter() to the end of the list.
    // module_implements() iterates through $implementations with a foreach loop
    // which PHP iterates in the order that the items were added, so to move an
    // item to the end of the array, we remove it and then add it.
    $group = $implementations ['uhd_wysiwyg'];
    unset($implementations ['uhd_wysiwyg']);
    $implementations ['uhd_wysiwyg'] = $group;
  }
}
